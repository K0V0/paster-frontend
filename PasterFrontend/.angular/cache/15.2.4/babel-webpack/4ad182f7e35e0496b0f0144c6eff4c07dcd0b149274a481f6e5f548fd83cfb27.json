{"ast":null,"code":"import { of } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../_CoreModule/services/jwt.service\";\nimport * as i2 from \"../../../../_CoreModule/services/local-storage.service\";\nimport * as i3 from \"../../../../_CoreModule/services/request.service\";\nexport let LoginService = /*#__PURE__*/(() => {\n  class LoginService {\n    constructor(jwtService, localStorageService, requestService) {\n      this.jwtService = jwtService;\n      this.localStorageService = localStorageService;\n      this.requestService = requestService;\n      this.loggedIn = false;\n    }\n    checkLogin() {\n      if (this.loggedIn) {\n        return true;\n      } else {\n        this.loggedIn = this.jwtService.isValid();\n        if (!this.loggedIn) {\n          let jwtToken = this.localStorageService.get('jwtToken');\n          if (jwtToken != null) {\n            this.jwtService.setToken(jwtToken);\n            this.loggedIn = this.jwtService.isValid();\n          }\n        }\n        return this.loggedIn;\n      }\n    }\n    // todo oddelit kontrolu nad session pouzivatela of component\n    doLogin(user, pass) {\n      return this.requestService.post('api/v1/user/login', {\n        name: user,\n        pass: pass\n      });\n    }\n    doLogout() {\n      this.loggedIn = false;\n      this.jwtService.removeToken();\n      this.localStorageService.remove('jwtToken');\n      let logoutObservable = of(true);\n      return logoutObservable;\n    }\n    saveJwtToken(jwtToken) {\n      this.localStorageService.set(\"jwtToken\", jwtToken);\n      this.jwtService.setToken(jwtToken);\n    }\n  }\n  LoginService.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.JwtService), i0.ɵɵinject(i2.LocalStorageService), i0.ɵɵinject(i3.RequestService));\n  };\n  LoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n  return LoginService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}