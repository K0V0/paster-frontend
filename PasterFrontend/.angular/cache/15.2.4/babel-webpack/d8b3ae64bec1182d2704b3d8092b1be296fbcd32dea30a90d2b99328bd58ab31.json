{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { BaseComponent } from \"../../../_Base/components/base.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/board.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../../_SharedModule/modules/translate/translate.pipe\";\nexport let SendItemComponent = /*#__PURE__*/(() => {\n  class SendItemComponent extends BaseComponent {\n    constructor(boardService, router) {\n      super(router);\n      this.boardService = boardService;\n      this.router = router;\n      this.title = 'copy/paste board';\n      this.text = new FormControl(\"\", Validators.required);\n      this.board = new FormGroup({\n        \"text\": this.text\n      });\n      this.showClearButton = false;\n    }\n    ngOnInit() {\n      this.trackClearButtonState();\n    }\n    sendText() {\n      this.boardService.sendText(this.board.value.text).subscribe(data => {\n        // no data from backend, just status code\n        this.text.setValue(\"\");\n      }, error => {\n        this.setAllServerErrors(error);\n      }, () => {\n        this.clearAllServerErrors();\n        // TODO just put data into table do not fire get request to refresh content\n      });\n    }\n\n    deleteText(event) {\n      event.preventDefault();\n      this.text.setValue(\"\");\n    }\n    trackClearButtonState() {\n      this.text.valueChanges.subscribe(data => {\n        this.showClearButton = data.length > 0;\n      });\n    }\n  }\n  SendItemComponent.ɵfac = function SendItemComponent_Factory(t) {\n    return new (t || SendItemComponent)(i0.ɵɵdirectiveInject(i1.BoardService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  SendItemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SendItemComponent,\n    selectors: [[\"app-board-send-item\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 14,\n    vars: 12,\n    consts: [[1, \"board\", 3, \"formGroup\", \"ngSubmit\"], [1, \"wrap\"], [\"type\", \"text\", \"formControlName\", \"text\", 3, \"placeholder\"], [1, \"textareaStatusbar\", \"separatingLine\"], [1, \"text-right\"], [1, \"\", 3, \"disabled\", \"click\"], [1, \"\", 3, \"disabled\"]],\n    template: function SendItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function SendItemComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.sendText();\n        });\n        i0.ɵɵelementStart(1, \"div\")(2, \"div\", 1);\n        i0.ɵɵelement(3, \"textarea\", 2);\n        i0.ɵɵpipe(4, \"t\");\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelement(6, \"div\");\n        i0.ɵɵelementStart(7, \"div\", 4)(8, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function SendItemComponent_Template_button_click_8_listener($event) {\n          return ctx.deleteText($event);\n        });\n        i0.ɵɵtext(9);\n        i0.ɵɵpipe(10, \"t\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 6);\n        i0.ɵɵtext(12);\n        i0.ɵɵpipe(13, \"t\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.board);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(4, 6, \"board.page.text\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", !ctx.showClearButton);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(10, 8, \"board.page.clear\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.board.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(13, 10, \"board.page.submit\"), \" \");\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.TranslationPipe],\n    styles: [\"form[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{box-sizing:border-box}form[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   div.wrap[_ngcontent-%COMP%]{margin-bottom:.25em}form[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   div.wrap[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{background-color:#b0ddff;border-top-left-radius:.25em;border-top-right-radius:.25em;width:100%;max-width:100%;padding:.5em;display:block;resize:vertical}form[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   div.wrap[_ngcontent-%COMP%]   div.textareaStatusbar[_ngcontent-%COMP%]{background-color:#b0ddff;border-bottom-right-radius:.25em;border-bottom-left-radius:.25em}form[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   div.wrap[_ngcontent-%COMP%]   div.textareaStatusbar[_ngcontent-%COMP%]   div.text-right[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-right:.5em;margin-bottom:.3125em;font-weight:700}\"]\n  });\n  return SendItemComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}