{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let RequestService /*<RQdto, RSdto>*/ = /*#__PURE__*/(() => {\n  class RequestService /*<RQdto, RSdto>*/ {\n    constructor(http) {\n      this.http = http;\n      this.headers = {\n        'Content-Type': 'application/json',\n        'x-auth-token': environment.apiKey\n      };\n      this.apiKeyHeader = {\n        'x-auth-token': environment.apiKey\n      };\n    }\n    post(endpoint, params, headers = {}) {\n      return this.http.post(environment.backendUrl + \"/\" + endpoint, params, {\n        headers: new HttpHeaders(Object.assign(Object.assign({}, this.headers), headers))\n      });\n    }\n    // TODO params pre get request\n    get(endpoint, params = {}, headers = {}) {\n      return this.http.get(environment.backendUrl + \"/\" + endpoint, {\n        headers: new HttpHeaders(Object.assign(Object.assign({}, this.apiKeyHeader), headers))\n      });\n    }\n    // TODO return potvrdenie o vykonani akcie, resp. vyuziv websocket api na backende\n    delete(endpoint) {\n      return this.http.delete(environment.backendUrl + \"/\" + endpoint, {\n        headers: new HttpHeaders(Object.assign({}, this.apiKeyHeader))\n      });\n    }\n  }\n  RequestService.ɵfac = function RequestService_Factory(t) {\n    return new (t || RequestService /*<RQdto, RSdto>*/)(i0.ɵɵinject(i1.HttpClient));\n  };\n  RequestService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RequestService /*<RQdto, RSdto>*/,\n    factory: RequestService /*<RQdto, RSdto>*/.ɵfac,\n    providedIn: 'root'\n  });\n  return RequestService /*<RQdto, RSdto>*/;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}