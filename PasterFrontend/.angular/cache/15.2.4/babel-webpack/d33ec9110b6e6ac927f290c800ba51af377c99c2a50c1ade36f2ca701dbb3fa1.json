{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { BaseComponent } from \"../../../../../_Base/components/base.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/login.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../../validation-errors/server-side/server-field-error.component\";\nimport * as i5 from \"../../../validation-errors/server-side/server-form-error.component\";\nimport * as i6 from \"../../../validation-errors/frontend-side/local-field-error.component\";\nimport * as i7 from \"../../../translate/translate.pipe\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent extends BaseComponent {\n    constructor(loginService, router) {\n      super(router);\n      this.loginService = loginService;\n      this.router = router;\n      this.title = 'PasterLogin';\n      this.user = new FormControl(\"\", Validators.required);\n      this.pass = new FormControl(\"\", Validators.required);\n      this.login = new FormGroup({\n        \"user\": this.user,\n        \"pass\": this.pass\n      });\n    }\n    ngOnInit() {\n      this.login.valueChanges.subscribe(() => {\n        this.clearAllServerErrors();\n      });\n    }\n    // TODO nejak vymysliet ak user po obdrzani chybovej hlasky zo servera nic nezmenil\n    //  nerobit znova request\n    // TODO skusit spravit nejaku abstrakciu aj pre observable\n    //  co by obsahovala handlovanie server errorov uz v sebe\n    doLogin() {\n      this.loginService.doLogin(this.login.value.user, this.login.value.pass).subscribe(data => {\n        this.loginService.saveJwtToken(data.jwtToken);\n        this.router.navigate(['board']);\n      }, error => {\n        this.setAllServerErrors(error);\n      }, () => {\n        this.clearAllServerErrors();\n      });\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 18,\n    vars: 16,\n    consts: [[1, \"login\", 3, \"formGroup\", \"ngSubmit\"], [1, \"wrap\"], [\"type\", \"text\", \"formControlName\", \"user\", 3, \"placeholder\"], [\"fieldRef\", \"user\", \"formGroupRef\", \"register\", 3, \"parentComponentContext\"], [\"fieldRef\", \"user\", 3, \"errorsObject\"], [\"type\", \"password\", \"formControlName\", \"pass\", 3, \"placeholder\"], [\"fieldRef\", \"pass\", \"formGroupRef\", \"register\", 3, \"parentComponentContext\"], [\"fieldRef\", \"pass\", 3, \"errorsObject\"], [1, \"text-right\"], [3, \"disabled\"], [3, \"errorsObject\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.doLogin();\n        });\n        i0.ɵɵelementStart(1, \"div\")(2, \"div\", 1);\n        i0.ɵɵelement(3, \"input\", 2);\n        i0.ɵɵpipe(4, \"t\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"app-local-field-error\", 3)(6, \"app-server-field-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\")(8, \"div\", 1);\n        i0.ɵɵelement(9, \"input\", 5);\n        i0.ɵɵpipe(10, \"t\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"app-local-field-error\", 6)(12, \"app-server-field-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 8)(14, \"button\", 9);\n        i0.ɵɵtext(15);\n        i0.ɵɵpipe(16, \"t\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(17, \"app-server-form-error\", 10);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.login);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(4, 10, \"login.page.user\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"parentComponentContext\", ctx);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"errorsObject\", ctx.serverFieldsErrors);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(10, 12, \"login.page.pass\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"parentComponentContext\", ctx);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"errorsObject\", ctx.serverFieldsErrors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.login.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(16, 14, \"login.page.submit\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"errorsObject\", ctx.serverFormError);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.ServerFieldErrorComponent, i5.ServerFormErrorComponent, i6.LocalFieldErrorComponent, i7.TranslationPipe]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}