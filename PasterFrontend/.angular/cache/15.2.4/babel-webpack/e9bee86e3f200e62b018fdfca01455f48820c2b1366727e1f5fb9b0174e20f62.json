{"ast":null,"code":"export class LanguagesList {\n  static getAvailableLanguages() {\n    return Array.from(LanguagesList.languagesList.keys());\n  }\n  static getLanguageList() {\n    return this.languagesList;\n  }\n  static containsLanguage(langCode) {\n    return LanguagesList.languagesList.get(langCode) !== undefined;\n  }\n  static getBestSuitedLang(langCode) {\n    // return original language if found\n    if (LanguagesList.languagesList.has(langCode)) {\n      return langCode;\n    }\n    // return language if requested language is compatible\n    for (let lang of LanguagesList.compatibleLanguagesMappings) {\n      if (lang[1].indexOf(langCode) > -1) {\n        return lang[0];\n      }\n    }\n    //TODO ked bude logging dat ako warning\n    // return default language if all methods before failed\n    return LanguagesList.FALLBACK_LANG;\n  }\n  static getUnderstanableLanguages(lang) {\n    let result = LanguagesList.compatibleLanguagesMappings.get(lang);\n    if (result !== undefined) {\n      return result;\n    }\n    return [];\n  }\n}\nLanguagesList.FALLBACK_LANG = 'en';\nLanguagesList.languagesList = new Map([[\"sk\", \"Slovenský\"], [\"en\", \"English\"], [\"ua\", \"український\"]]);\nLanguagesList.compatibleLanguagesMappings = new Map([[\"sk\", [\"cz\", \"cs\"]], [\"en\", [\"us\", \"gb\"]], [\"ua\", [\"by\", \"ru\", \"rus\"]]]);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}