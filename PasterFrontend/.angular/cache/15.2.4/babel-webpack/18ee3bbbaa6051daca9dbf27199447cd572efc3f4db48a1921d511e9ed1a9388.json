{"ast":null,"code":"import { ValidationErrorsAnimations } from \"../validationErrors.animations\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../translate/translate.service\";\nimport * as i2 from \"@angular/common\";\nfunction LocalFieldErrorComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@errorMessagesAnimation\", undefined);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.messages, \" \");\n  }\n}\nexport let LocalFieldErrorComponent = /*#__PURE__*/(() => {\n  class LocalFieldErrorComponent {\n    constructor(translateService) {\n      this.translateService = translateService;\n      this.title = 'Field error message handled by frontend';\n      this.fieldRef = \"\";\n      this.formGroupRef = \"\";\n      this.messages = [];\n    }\n    ngOnInit() {\n      var _a;\n      this.field = this.parentComponentContext['' + this.fieldRef];\n      this.getActiveErrorsKeys();\n      (_a = this.field) === null || _a === void 0 ? void 0 : _a.valueChanges.subscribe(val => {\n        this.getActiveErrorsKeys();\n      });\n    }\n    getActiveErrorsKeys() {\n      var _a;\n      let errors = (_a = this.field) === null || _a === void 0 ? void 0 : _a.errors;\n      let keys = errors ? Object.keys(errors) : null;\n      this.messages = [];\n      keys === null || keys === void 0 ? void 0 : keys.forEach(key => {\n        let translationPath = this.formGroupRef + '.validationErrors.' + this.fieldRef + '.' + key;\n        this.messages.push(this.translateService.translate(translationPath));\n      });\n    }\n  }\n  LocalFieldErrorComponent.ɵfac = function LocalFieldErrorComponent_Factory(t) {\n    return new (t || LocalFieldErrorComponent)(i0.ɵɵdirectiveInject(i1.TranslateService));\n  };\n  LocalFieldErrorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LocalFieldErrorComponent,\n    selectors: [[\"app-local-field-error\"]],\n    inputs: {\n      parentComponentContext: \"parentComponentContext\",\n      fieldRef: \"fieldRef\",\n      formGroupRef: \"formGroupRef\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"errorPlaceholder\", 4, \"ngIf\"], [1, \"errorPlaceholder\"]],\n    template: function LocalFieldErrorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, LocalFieldErrorComponent_div_0_Template, 3, 2, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.messages != null && ctx.messages.length > 0 && ((ctx.field == null ? null : ctx.field.touched) || (ctx.field == null ? null : ctx.field.dirty)));\n      }\n    },\n    dependencies: [i2.NgIf],\n    styles: [\"div.errorPlaceholder[_ngcontent-%COMP%]{text-align:left;max-height:3em}div.errorPlaceholder[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:.875em;font-weight:400;display:inline-block;line-height:1.25em;margin:.25em;padding:.25em;color:#000;background-color:transparent;transition:transform .125s ease-in-out;text-align:left}div.errorPlaceholder[_ngcontent-%COMP%]   span.blink[_ngcontent-%COMP%]{transform:scale(1.1)}div.errorPlaceholder[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:before{content:\\\"!\\\";display:inline-block;font-weight:700;background-color:#d00;color:#fff;border-radius:2em;width:1em;height:1em;line-height:1em;text-align:center;border:.125em solid #ebf6ff;position:relative;bottom:1px}\"],\n    data: {\n      animation: [ValidationErrorsAnimations.errorMessagesAnimation]\n    }\n  });\n  return LocalFieldErrorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}