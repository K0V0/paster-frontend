name: Build Docker image and deply app to VPS

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Prepare some variables
        id: vars
        run: echo "::set-output name=timestamp::$(date +%s)"

      - name: Setup SSH
        uses: MrSquaare/ssh-setup-action@v3
        with:
          host: github.com
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          private-key-name: github

      - name: Checkout repository with dockerfiles
        uses: actions/checkout@v4
        with:
          repository: K0V0/kovostack-dockerfiles
          token: ${{ secrets.MAIN_ACCESS_TOKEN }}
          ref: main

      - name: Clone repository with dockerfiles into temp directory
        run: git clone git@github.com:K0V0/kovostack-dockerfiles.git temp

      - name: Checkout repository with current source code
        uses: actions/checkout@v4
        
      - name: Copy app source into temp directory
        run: cp -r ./PasterFrontend/. ./temp/

      - name: Build Docker image
        run: docker build -t k0v0/kovo-docker-repo ./temp/paster-cloud/frontend/

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: |
          docker tag k0v0/kovo-docker-repo k0v0/kovo-docker-repo:paster-cloud-frontend-${{ steps.timestamp.outputs.timestamp }}
          docker push k0v0/kovo-docker-repo:paster-cloud-frontend-${{ steps.timestamp.outputs.timestamp }}

      - name: Notify target environment
        run: |
          # Use webhook or SSH to notify target environment to pull new Docker image
          # Example with webhook:
          curl -X POST -d '{"image": "your_dockerhub_username/your_repository_name:latest"}' https://your.webhook.endpoint

      - name: Clean up
        run: rm -rf temp

    # You can add more steps here as needed
